openapi: 3.0.3
info:
  title: Nuolaidauk API
  version: 1.0.0
  description: API for the Nuolaidauk project
paths:
  /api/catalog/brands/:
    get:
      operationId: api_catalog_brands_list
      summary: List brands
      tags:
      - Brands
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
          description: ''
    post:
      operationId: api_catalog_brands_create
      summary: Create brand
      tags:
      - Brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
  /api/catalog/brands/{id}/:
    get:
      operationId: api_catalog_brands_retrieve
      summary: Get brand
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - Brands
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    put:
      operationId: api_catalog_brands_update
      summary: Update brand
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - Brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Brand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    patch:
      operationId: api_catalog_brands_partial_update
      summary: Partially update brand
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - Brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBrand'
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    delete:
      operationId: api_catalog_brands_destroy
      summary: Delete brand
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - Brands
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/catalog/categories/:
    get:
      operationId: api_catalog_categories_list
      summary: List categories
      tags:
      - Categories
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: api_catalog_categories_create
      summary: Create category
      tags:
      - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/catalog/categories/{id}/:
    get:
      operationId: api_catalog_categories_retrieve
      summary: Get category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - Categories
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_catalog_categories_update
      summary: Update category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_catalog_categories_partial_update
      summary: Partially update category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_catalog_categories_destroy
      summary: Delete category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - Categories
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/catalog/discounts/:
    get:
      operationId: api_catalog_discounts_list
      summary: List discounts
      tags:
      - Discounts
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discount'
          description: ''
    post:
      operationId: api_catalog_discounts_create
      summary: Create discount
      tags:
      - Discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/catalog/discounts/{id}/:
    get:
      operationId: api_catalog_discounts_retrieve
      summary: Get discount
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - Discounts
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: api_catalog_discounts_update
      summary: Update discount
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - Discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: api_catalog_discounts_partial_update
      summary: Partially update discount
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - Discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    delete:
      operationId: api_catalog_discounts_destroy
      summary: Delete discount
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - Discounts
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/catalog/product-discount-history/:
    get:
      operationId: api_catalog_product_discount_history_list
      summary: List product discount history
      tags:
      - Product Discount History
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDiscountHistory'
          description: ''
  /api/catalog/product-discount-history/{id}/:
    get:
      operationId: api_catalog_product_discount_history_retrieve
      summary: Get product discount history
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product discount history.
        required: true
      tags:
      - Product Discount History
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscountHistory'
          description: ''
  /api/catalog/products/:
    get:
      operationId: api_catalog_products_list
      summary: List products
      parameters:
      - in: query
        name: brand
        schema:
          type: string
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: max_price
        schema:
          type: number
      - in: query
        name: min_price
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Products
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_catalog_products_create
      summary: Create product
      tags:
      - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/catalog/products/{id}/:
    get:
      operationId: api_catalog_products_retrieve
      summary: Get product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - Products
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_catalog_products_update
      summary: Update product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_catalog_products_partial_update
      summary: Partially update product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_catalog_products_destroy
      summary: Delete product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - Products
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/catalog/reports/:
    post:
      operationId: api_catalog_reports_create
      summary: Report a product or a discount
      tags:
      - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportCreate'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCreate'
          description: ''
  /api/catalog/reports/moderation/:
    get:
      operationId: api_catalog_reports_moderation_list
      summary: List reported items (moderation)
      tags:
      - Reports
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportModeration'
          description: ''
  /api/catalog/reports/moderation/{id}/:
    get:
      operationId: api_catalog_reports_moderation_retrieve
      summary: Retrieve a report (moderation)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Reports
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportModeration'
          description: ''
    put:
      operationId: api_catalog_reports_moderation_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportModeration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportModeration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportModeration'
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportModeration'
          description: ''
    patch:
      operationId: api_catalog_reports_moderation_partial_update
      summary: Update report status (moderation)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReportModeration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReportModeration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReportModeration'
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportModeration'
          description: ''
  /api/catalog/stores/:
    get:
      operationId: api_catalog_stores_list
      summary: List stores
      tags:
      - Stores
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Store'
          description: ''
    post:
      operationId: api_catalog_stores_create
      summary: Create store
      tags:
      - Stores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Store'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Store'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
          description: ''
  /api/catalog/stores/{id}/:
    get:
      operationId: api_catalog_stores_retrieve
      summary: Get store
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this store.
        required: true
      tags:
      - Stores
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
          description: ''
    put:
      operationId: api_catalog_stores_update
      summary: Update store
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this store.
        required: true
      tags:
      - Stores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Store'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Store'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
          description: ''
    patch:
      operationId: api_catalog_stores_partial_update
      summary: Partially update store
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this store.
        required: true
      tags:
      - Stores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStore'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStore'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStore'
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
          description: ''
    delete:
      operationId: api_catalog_stores_destroy
      summary: Delete store
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this store.
        required: true
      tags:
      - Stores
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/catalog/user/discounts/:
    get:
      operationId: api_catalog_user_discounts_list
      description: Returns discounts submitted by the current user in reverse chronological
        order.
      summary: List submitted discounts
      tags:
      - User Discounts
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDiscountList'
          description: ''
    post:
      operationId: api_catalog_user_discounts_create
      description: Submit a discount targeting a product or category. Exactly one
        of product_id, category_id, or new_product must be provided. When providing
        new_product, its brand must match the store's brand.
      summary: Submit a new discount
      tags:
      - User Discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDiscountCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDiscountCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDiscountCreate'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscountList'
          description: ''
  /api/catalog/user/wishlist/:
    get:
      operationId: api_catalog_user_wishlist_list
      summary: List wishlist items
      tags:
      - Wishlist
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WishlistItem'
          description: ''
    post:
      operationId: api_catalog_user_wishlist_create
      summary: Add product to wishlist
      tags:
      - Wishlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WishlistItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WishlistItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WishlistItem'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WishlistItem'
          description: ''
  /api/catalog/user/wishlist/{product_id}/:
    delete:
      operationId: api_catalog_user_wishlist_destroy
      summary: Remove product from wishlist
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - Wishlist
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/change-password:
    post:
      operationId: api_change_password_create
      description: Changes the current user's password after verifying the current
        password.
      summary: Change password
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Password changed
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
  /api/list:
    get:
      operationId: api_list_retrieve
      description: Admin-only view to list all users.
      summary: List users
      tags:
      - Users
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SimpleUser'
          description: List of users
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated/unauthorized
  /api/login:
    post:
      operationId: api_login_create
      description: Authenticate a user with email & password. JWT and refresh token
        are also set as HttpOnly cookies.
      summary: Login
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Tokens returned and set as cookies
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid credentials
  /api/logout:
    post:
      operationId: api_logout_create
      description: Clears JWT and refresh cookies. No request body required.
      summary: Logout
      tags:
      - Auth
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Logged out
  /api/refresh:
    post:
      operationId: api_refresh_create
      description: Exchanges a valid refresh cookie for a new access & refresh token
        pair. No request body required.
      summary: Refresh access token
      tags:
      - Auth
      security:
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: New tokens issued and set as cookies
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Missing/expired/invalid refresh token
  /api/register:
    post:
      operationId: api_register_create
      description: Create an account. Returns the created user without the password.
      summary: Register a new user
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtCookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Created user
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error
  /api/user:
    get:
      operationId: api_user_retrieve
      description: Returns the currently authenticated user's profile.
      summary: Get current user
      tags:
      - Users
      security:
      - jwtCookieAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Authenticated user
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthenticated
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Brand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        stores_count:
          type: integer
          readOnly: true
        products_count:
          type: integer
          readOnly: true
        active_discounts_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - active_discounts_count
      - created_at
      - id
      - name
      - products_count
      - stores_count
      - updated_at
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - created_at
      - id
      - name
      - updated_at
    ChangePassword:
      type: object
      properties:
        current_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
      required:
      - current_password
      - new_password
    Discount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        effective_status:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        target_type:
          $ref: '#/components/schemas/TargetTypeEnum'
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/DiscountStatusEnum'
        brand:
          type: integer
          nullable: true
        category:
          type: integer
          nullable: true
        product:
          type: integer
          nullable: true
        submitted_by:
          type: integer
          nullable: true
      required:
      - created_at
      - discount_type
      - effective_status
      - ends_at
      - id
      - name
      - starts_at
      - target_type
      - updated_at
      - value
    DiscountStatusEnum:
      enum:
      - in_review
      - approved
      - denied
      type: string
      description: |-
        * `in_review` - In Review
        * `approved` - Approved
        * `denied` - Denied
    DiscountTypeEnum:
      enum:
      - percentage
      - fixed
      type: string
      description: |-
        * `percentage` - Percentage
        * `fixed` - Fixed amount
    Error:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Message:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    NullEnum:
      enum:
      - null
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PatchedBrand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        stores_count:
          type: integer
          readOnly: true
        products_count:
          type: integer
          readOnly: true
        active_discounts_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
    PatchedDiscount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        effective_status:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        target_type:
          $ref: '#/components/schemas/TargetTypeEnum'
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/DiscountStatusEnum'
        brand:
          type: integer
          nullable: true
        category:
          type: integer
          nullable: true
        product:
          type: integer
          nullable: true
        submitted_by:
          type: integer
          nullable: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        external_id:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        photo_url:
          type: string
          format: uri
          maxLength: 200
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        price_unit:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PriceUnitEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,3})?$
          nullable: true
        store:
          type: integer
          nullable: true
        brand_name:
          type: string
          readOnly: true
        brand:
          type: integer
          nullable: true
        category:
          type: integer
    PatchedReportModeration:
      type: object
      description: Serializer for moderators/admins to view and update report status.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          readOnly: true
          nullable: true
        discount:
          type: integer
          readOnly: true
          nullable: true
        product_reason:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ProductReasonEnum'
          - $ref: '#/components/schemas/NullEnum'
        discount_image_base64:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/ReportStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStore:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        brand:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        nickname:
          type: string
          description: Optional label to distinguish individual store locations.
          maxLength: 255
        address_line1:
          type: string
          maxLength: 255
        address_line2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 100
    PriceUnitEnum:
      enum:
      - per_piece
      - per_kilogram
      type: string
      description: |-
        * `per_piece` - Per piece
        * `per_kilogram` - Per kilogram
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        external_id:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        photo_url:
          type: string
          format: uri
          maxLength: 200
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        price_unit:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PriceUnitEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,3})?$
          nullable: true
        store:
          type: integer
          nullable: true
        brand_name:
          type: string
          readOnly: true
        brand:
          type: integer
          nullable: true
        category:
          type: integer
      required:
      - brand
      - brand_name
      - category
      - created_at
      - discounts
      - external_id
      - id
      - name
      - updated_at
    ProductDiscountHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        applied_at:
          type: string
          format: date-time
          readOnly: true
        removed_at:
          type: string
          format: date-time
          nullable: true
        applied_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Snapshot of the product price when the discount was applied.
        product:
          type: integer
        discount:
          type: integer
      required:
      - applied_at
      - applied_price
      - discount
      - id
      - product
    ProductReasonEnum:
      enum:
      - name
      - photo
      - price
      type: string
      description: |-
        * `name` - Name
        * `photo` - Photo
        * `price` - Price
    ReportCreate:
      type: object
      description: |-
        Serializer for users to report a product or a discount.
        Rules enforced:
        - Exactly one of product or discount is provided
        - If product is provided, product_reason must be one of: name/photo/price
        - If discount is provided, discount_image_base64 is required
        - Description is required
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          nullable: true
        discount:
          type: integer
          nullable: true
        product_reason:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ProductReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        discount_image_base64:
          type: string
        description:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/ReportStatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - id
      - status
    ReportModeration:
      type: object
      description: Serializer for moderators/admins to view and update report status.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          readOnly: true
          nullable: true
        discount:
          type: integer
          readOnly: true
          nullable: true
        product_reason:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ProductReasonEnum'
          - $ref: '#/components/schemas/NullEnum'
        discount_image_base64:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/ReportStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - discount
      - discount_image_base64
      - id
      - product
      - product_reason
    ReportStatusEnum:
      enum:
      - REPORTED
      - ACCEPTED
      - DENIED
      type: string
      description: |-
        * `REPORTED` - Reported
        * `ACCEPTED` - Accepted
        * `DENIED` - Denied
    RoleEnum:
      enum:
      - user
      - moderator
      - admin
      type: string
      description: |-
        * `user` - User
        * `moderator` - Moderator
        * `admin` - Admin
    SimpleUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    Store:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        brand:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        nickname:
          type: string
          description: Optional label to distinguish individual store locations.
          maxLength: 255
        address_line1:
          type: string
          maxLength: 255
        address_line2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 100
      required:
      - address_line1
      - brand
      - city
      - created_at
      - id
      - postal_code
      - updated_at
    TargetTypeEnum:
      enum:
      - product
      - category
      - brand
      type: string
      description: |-
        * `product` - Product
        * `category` - Category
        * `brand` - Brand
    Token:
      type: object
      properties:
        jwt:
          type: string
          readOnly: true
        refresh_token:
          type: string
          readOnly: true
      required:
      - jwt
      - refresh_token
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 255
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - email
      - id
      - name
      - password
    UserDiscountCreate:
      type: object
      description: Serializer for users to submit a new discount for moderation.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        store_id:
          type: integer
          writeOnly: true
        category_id:
          type: integer
          writeOnly: true
        product_id:
          type: integer
          writeOnly: true
        new_product:
          allOf:
          - $ref: '#/components/schemas/UserProductCreate'
          writeOnly: true
      required:
      - discount_type
      - ends_at
      - id
      - name
      - starts_at
      - store_id
      - value
    UserDiscountList:
      type: object
      description: Serializer for listing user-submitted discounts with their status.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        target_type:
          $ref: '#/components/schemas/TargetTypeEnum'
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        effective_status:
          type: string
          readOnly: true
      required:
      - effective_status
      - ends_at
      - id
      - name
      - starts_at
      - target_type
    UserProductCreate:
      type: object
      description: Serializer for creating a product within the discount submission.
      properties:
        name:
          type: string
          maxLength: 255
        brand:
          type: string
        category:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        price_unit:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PriceUnitEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,3})?$
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - brand
      - category
      - name
    WishlistItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        product_name:
          type: string
          nullable: true
          readOnly: true
        product_photo_url:
          type: string
          nullable: true
          readOnly: true
        price:
          type: number
          format: double
          nullable: true
          readOnly: true
        discounted_price:
          type: number
          format: double
          nullable: true
          description: |-
            Return the best (lowest) discounted price if a discount is active; otherwise None.
            Active means: current time between starts_at and ends_at. We do not hard-require
            an APPROVED status here because upstream data may not consistently set it; the
            time window is the source of truth for activity.
            We first check direct discount rules on the product, then fall back to discount history.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - discounted_price
      - id
      - price
      - product
      - product_name
      - product_photo_url
  securitySchemes:
    jwtCookieAuth:
      type: apiKey
      in: cookie
      name: jwt
